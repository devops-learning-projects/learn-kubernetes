## A ReplicaSet in Kubernetes is a controller that ensures a specified number of identical Pods (replicas) are running at all times. Its primary purpose is to maintain the availability and stability of your application by automatically replacing failed or terminated Pods.
# replicaset always try to maintain the desire number of pod creation. To maintain that it can create or remove extra pods.
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: rs-demo
  labels:
    project: example
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod-2
  labels:
    app: nginx
spec:
  containers:
    - name: nginx
      image: nginx

# we can control the number of replicas on cli also.
# $ kubectl scale rs rs-demo --replicas=2 (the younger one will delete first)

## Problems of ReplicaSet
# 1. If you update the version of your image, even then your pods will not be updated.